package main

import (
	"bytes"
	"log"
	"os"
)

func main() {
	data, err := os.ReadFile("./with_context.go")
	if err != nil {
		log.Fatal(err)
	}

	replacements := map[string]string{
		"WithContext[T any]":  "WithDone[T any]",
		"ctx context.Context": "done <-chan struct{}",
		"WithContext(ctx":     "WithDone(done",
		"context canceled":    "done chan closed",
		"ctx.Done()":          "done",
		`"context"`:           "",
		`//go:generate go run ./cmd/internal/gendone/`: "",
	}

	for search, replece := range replacements {
		data = bytes.ReplaceAll(data, []byte(search), []byte(replece))
	}
	// docs related
	data = bytes.ReplaceAll(data, []byte("WithContext "), []byte("WithDone "))

	data = append([]byte("// Code generated by cmd/internal/gendone. DO NOT EDIT.n"), data...)
	os.WriteFile("./with_done.go", data, 0x644)
}
